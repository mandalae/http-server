version: 2
jobs:
  install:
    docker:
      - image: circleci/node:14.0.0
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

     # Persist everything to make sure we can run the tests in a separate job
      - persist_to_workspace:
          root: ~/repo
          paths:
              - ./
  build:
      docker:
        - image: circleci/node:14.0.0
      working_directory: ~/repo

      steps:
          # Attach workspace with everything in it to run the tests
          - attach_workspace:
              at: ./
          # run build!
          - run:
              name: Set up git
              command: git config --global user.email "c@rpediem.com" && git config --global user.name "Builder" && mkdir -p ~/.ssh && touch ~/.ssh/known_hosts && ssh-keygen -F github.com || ssh-keyscan github.com >> ~/.ssh/known_hosts
          - run: npm run build:docker
          - run:
              name: Commit anything left
              command: git commit -m "Committing leftovers [ci skip]" . || true
          - run:
              name: Update version
              command: npm version minor -m "Upgraded to %s [ci skip]"
          - run:
              name: Push changes and tags
              command: git push && git push --tags
  push:
      machine: true
      steps:
       - attach_workspace:
           at: ./

       - run: docker login -u $DOCKER_USER -p $DOCKER_PASS

       - run: ls -la
       
       # build the application image
       - run: docker build -t mandalae/do-assessment:latest .

       # deploy the image
       - run: docker push mandalae/do-assessment:latest

workflows:
  version: 2
  install-build-push:
    jobs:
      - install
      - build:
          requires:
            - install
      - push:
          requires:
            - build
          filters:
            branches:
              only: main
